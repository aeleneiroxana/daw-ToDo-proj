@model ToDoApp.Models.Task

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Task</h4>
    <hr />
    @Html.HiddenFor(model => model.TaskId)

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @if (ViewBag.HasRights)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2", Style = "color: white" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2", Style = "color: white" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {
        @Html.HiddenFor(model => model.Title)
        @Html.HiddenFor(model => model.Description)
    }
    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2", Style = "color: white" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.HiddenFor(model => model.ProjectId)
    @if (ViewBag.HasRights)
    {
        <div class="form-group">
            <label style="color:white">
                Select member to assign to
            </label>
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.AssignedUserId, new SelectList(ViewBag.TeamMembers, "Value", "Text"),
                 "Select member", new { @class = "form-control" })

                @Html.ValidationMessageFor(m => m.AssignedUserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2", Style = "color: white" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2", Style = "color: white" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {
        @Html.HiddenFor(model => model.AssignedUserId)
        @Html.HiddenFor(model => model.StartDate)
        @Html.HiddenFor(model => model.EndDate)
    }
    @Html.HiddenFor(model => model.LastUpdate)

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

